name: CI

on:
  push:
    branches: ['**']
  pull_request:
    branches: ['**']
  workflow_dispatch:

# Avoid duplicate runs on the same branch
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read

jobs:
  build-java:
    name: Build Java modules
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        service: [log-ingest, parser-enricher, rules-engine, policy-kb, alert-aggregator, notifier]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: "21"
          distribution: "temurin"
          cache: maven

      - name: Maven verify
        working-directory: ${{ matrix.service }}
        run: |
          if [ -f pom.xml ]; then
            mvn -B -ntp verify
          else
            echo "No pom.xml in $PWD, skipping Maven build for ${{ matrix.service }}."
          fi

  build-python:
    name: Build Python ML service
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: "pip"

      - name: Install dependencies
        working-directory: ml-risk-scorer
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then
            pip install -r requirements.txt
          else
            echo "No requirements.txt found in ml-risk-scorer; skipping installs."
          fi

      - name: Run tests (placeholder)
        run: echo "No tests yet for ml-risk-scorer."

  docker-build:
    name: Docker build (smoke test)
    needs: [build-java, build-python]
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        image: [log-ingest] # add more service folders as they get Dockerfiles
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Build Docker image
        run: |
          if [ -f "./${{ matrix.image }}/Dockerfile" ]; then
            docker build -t ghcr.io/${{ github.repository }}/test-${{ matrix.image }}:sha-${{ github.sha }} "./${{ matrix.image }}"
          else
            echo "No Dockerfile in ./${{ matrix.image }}; skipping docker build."
          fi
